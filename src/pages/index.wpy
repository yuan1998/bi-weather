<style lang="less">

    .container {
        color:#D7EFFA;
        background-color: #40a7e7;

        .search-text-wrap {
            padding-left: 40rpx;
            padding-right: 40rpx;
            padding-top: 20rpx;

            .search-icon {
                width: 40rpx;
                height: 40rpx;
                position: absolute;
                left: 0;
                top: 0;
            }

            .search-text input{
                font-size: 28rpx;
                font-weight: lighter;
                text-align: left;
                display: block;
                line-height: 60rpx;
                border-bottom: 2rpx solid #D0E9F9;
                padding-left: 50rpx;

                .phcolor {
                    color:#D7EFFA;
                }

            }

        }


        .position-wrap {
            text-align: center;
            position: relative;
            .position {
                font-size: 30rpx;
            }

            .update-time {
                position: absolute;
                bottom: 0;
                right: 30rpx;
                font-size: 24rpx;
            }
        }

        .celsius-wrap {
            padding-top: 40rpx;
            text-align: center;
            padding-bottom: 20rpx;

            .celsius {
                font-weight: lighter;
                color:#fff;

                font-size: 200rpx;
            }

            .celsius:after {
                content:'。';
                display: inline-block;
                font-size: 100rpx;
                position: absolute;
                top: 10rpx;

            }

        }

        .current-weather-wrap {
            text-align: center;

            .current-weather-info {
                font-size: 30rpx;
                padding-bottom: 20rpx;
            }

            .current-weather-pollution {
                display: inline-block;
                background-color: #54B6E9;
                font-size: 24rpx;
                height: 36rpx;
                line-height: 36rpx;
                padding-right: 24rpx;
                padding-left: 24rpx;
                border-radius: 36rpx;

            }

        }

        .original-data-wrap {
            padding-top: 40rpx;
            text-align: center;
            display: block;
            font-size: 0px;
            padding-bottom: 20rpx;

            .original-data-item {
                padding-top: 10rpx;
                padding-bottom: 10rpx;
                display: inline-block;
                font-size: 28rpx;
                width: 25%;
                color: #d0ecf7;
                background-color: #3E9FDC;
                line-height: 1.8;
            }

        }


        .weather-tips-wrap {
            padding-left: 30rpx;
            padding-right: 30rpx;
            background-color: #3E9FDC;

            .weather-tip-item {
                border-bottom: 2rpx solid #53B1E2;
                font-size: 0;
                display: flex;
                align-items: center;
                justify-items: center;


                .tip-icon-wrap {

                    flex: 1;
                    text-align: center;
                    image {
                        width: 100rpx;
                        height: 100rpx;

                        display: inline-block;
                    }
                }

                .tip-text-wrap {
                    padding-top: 20rpx;
                    padding-bottom: 20rpx;
                    flex:3;
                    line-height: 1.4;

                    font-size: 26rpx;
                    .title {
                        padding-bottom: 10rpx;
                        font-size: 34rpx;
                    }
                }

            }




        }





    }


</style>
<template>
    <view class="container">
        <view class="search-container">
            <view class="search-wrapper">

            </view>

        </view>
        <view class="search-text-wrap">
            <view class="search-text">
                <form bindsubmit="handleSearch"  class="search-form">
                    <image class="search-icon" src="../assets/search.png"></image>
                    <input type="text" placeholder-class="phcolor" value="{{inputData}}" placeholder="请输入城市"/>
                </form>
            </view>
        </view>

        <view class="center-container">
            <view class="position-wrap">
                <text class="position">
                    {{currentWeather.currentCity}}
                </text>
                <text class="update-time">
                    {{currentWeather.updateDate}}更新
                </text>
            </view>
            <view class="celsius-wrap">
                <view class="celsius">
                    {{currentWeather.celsius}}
                </view>
            </view>

            <view class="current-weather-wrap">
                <view class="current-weather-info">
                    {{cuurentWeather.weatherDesc}}
                </view>
                <view class="current-weather-pollution">
                    {{currentWeather.pmt}} {{currentWeather.pm25}}
                </view>
            </view>
        </view>

        <view class="original-data-wrap">
            <repeat for="{{originalData.weather_data}}" key="index" index="index" item="item">

            <view class="original-data-item">
                <view class="data-name">
                    {{item.date.length > 5 ? '今天' : item.date}}
                </view>
                <view class="celsius">
                    {{item.temperature}}
                </view>
                <view class="weather">
                    {{item.weather}}
                </view>
                <view class="wind-direction">
                    {{item.wind}}
                </view>
            </view>
            </repeat>

        </view>

        <view class="weather-tips-wrap">

            <repeat for="{{originalData.index}}" key="index" index="index" item="item">
                <view class="weather-tip-item">
                    <view class="tip-icon-wrap">
                        <image class="tip-icon" src="../assets/{{png[index]}}"></image>
                    </view>
                    <view class="tip-text-wrap">
                        <view class="title">
                            {{item.tipt}} {{item.zs}}
                        </view>
                        <view class="info">
                            {{item.des}}
                        </view>
                    </view>
                </view>
            </repeat>

        </view>


    </view>
</template>

<script>
    import wepy from 'wepy'

    export default class Index extends wepy.page {
        config = {
            navigationBarTitleText: 'Weather',
        }


        data = {
            originalData :null,
            currentWeather:null,
            BMap: null,
            pullLoading:false,
            lnglat: '',
            error:false,
            errorMsg : '',
            inputData : '',
            png: [
                'clothes.png',
                'cart.png',
                'drug.png',
                'sport.png',
                'dd.png',
            ]
        }

        handleSearch(e)
        {
            console.log(this.inputData);
        }

        pm25Parse (pm25)
        {
            let text ='';

            switch(true){
                case pm25 >=0 && pm25 <=50:
                    text = '优';
                    break;
                case pm25>=51 && pm25 <=100:
                    text = '良';
                    break;
                case pm25>=101 && pm25 <=150:
                    text = '轻度污染';
                    break;
                case pm25>=151 && pm25 <=200:
                    text = '中度污染';
                    break;
                case pm25>=201 && pm25 <=300:
                    text = '重度污染';
                    break;
                case pm25>=300:
                    text = '重度污染';
                    break;
            }


            return text;
        }


        async getWeather (location)
        {
            let data = {
                fail: this.fail.bind(this),
                success: this.success.bind(this),
            }

            if(location){
                await this.getLocation(location);
                if(this.lnglat === '')
                    return;

                data.location = this.lnglat;
                this.lnglat ='';
            }

            return await this.BMap.weather(data);
        }


        parseDate (time)
        {
            let date =new Date(time);

            //月
            var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1);
            //日
            var D = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();
            //时
            var h = date.getHours();
            //分
            var m = date.getMinutes();

            return `${M}-${D} ${h}:${m}`;


        }

        convertToF (celsius){
            let fahrenheit ;

            // Only change code below this line
            fahrenheit = (celsius * (9/5)) + 32; // fahenheit = celsius * 9/5 + 32 works too.
            // Only change code above this line
            return fahrenheit;
        }

        getCurrentCelsius (str)
        {
            let reg = /\：(\d+)\℃/g;

            let result = reg.exec(str);

            return result[1];
        }

        success(res) {
            this.originalData = res.originalData.results[0];
            this.currentWeather = res.currentWeather[0];
            this.currentWeather.pmt = this.pm25Parse(this.currentWeather.pm25);
            this.currentWeather.updateTime = new Date().getTime();
            this.currentWeather.updateDate = this.parseDate(this.currentWeather.updateTime);
            this.currentWeather.celsius = this.getCurrentCelsius(this.currentWeather.date);
            this.currentWeather.fahrenheit = this.convertToF(this.currentWeather.celsius);

            this.$apply();

            if(this.pullLoading){
                wx.stopPullDownRefresh();
                this.pullLoading = false;
            }

        }



        fail(res) {
            // this.originalData = res.originalData.result[0];
            // console.log(this.originalData);
        }

        async getLocation (add)
        {
            this.error = false;

            let res = await this.$parent.AMapGetLocation(add);
            if(res.data.status === 0){
                this.error = true;
                this.errorMsg = '';
            }else{
                if(res.data.geocodes.length === 0){
                    this.error = true;
                    this.errorMsg = '搜索不到';
                    return;
                }

                this.lnglat = res.data.geocodes[0].location;
            }
        }


        onPullDownRefresh ()
        {
            this.pullLoading = true;
            this.getWeather();
            console.log(1);
        }

        onShow() {
            this.BMap = this.$parent.globalData.BMap;
            this.getWeather();
            console.log(this.$parent.globalData);
        }

    }
</script>
